plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version "0.7.+"
}

base {
    archivesName = 'example-forge'
}

minecraft {
    mappings channel: 'official', version: minecraftVersion
    runs {
        client {
            workingDirectory project.file('../.minecraft')
            ideaModule "${rootProject.name}.${project.name}.main"
            mods {
                modClientRun {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    flatDir {
        dirs '../libs/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraftVersion}-${forgeVersion}"
    implementation project(':')
    implementation fg.deobf("io.github.phantomloader:library-forge:${phantomVersion}")
    annotationProcessor fg.deobf("io.github.phantomloader:library-forge:${phantomVersion}")
    annotationProcessor "io.github.phantomloader:processor-forge:${phantomVersion}"
}

mixin {
    add sourceSets.main, "mixin.${modId}.refmap.json"
    config modMixin
}

tasks.withType(JavaCompile).configureEach {
    source project(':').sourceSets.main.allSource
    options.compilerArgs.add "-AforgeVersion=${forgeVersion}"
    options.compilerArgs.add "-AphantomVersion=${phantomVersion}"
    options.compilerArgs.add "-AminecraftVersion=${minecraftVersion}"
    options.compilerArgs.add "-AmodId=${modId}"
    options.compilerArgs.add "-AmodGroupId=${modGroupId}"
    options.compilerArgs.add "-AmodVersion=${modVersion}"
    options.compilerArgs.add "-AmodName=${modName}"
    options.compilerArgs.add "-AmodLicense=${modLicense}"
    options.compilerArgs.add "-AmodAuthors=${modAuthors}"
    options.compilerArgs.add "-AmodDescription=${modDescription}"
    options.compilerArgs.add "-AmodUrl=${modUrl}"
    options.compilerArgs.add "-AmodSource=${modSource}"
}

processResources {
    from project(':').sourceSets.main.resources
}

jar {
    finalizedBy 'reobfJar'
}
